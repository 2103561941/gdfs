// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.3
// source: proto/namenode/namenode.proto

package server

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NameNodeServerClient is the client API for NameNodeServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NameNodeServerClient interface {
}

type nameNodeServerClient struct {
	cc grpc.ClientConnInterface
}

func NewNameNodeServerClient(cc grpc.ClientConnInterface) NameNodeServerClient {
	return &nameNodeServerClient{cc}
}

// NameNodeServerServer is the server API for NameNodeServer service.
// All implementations must embed UnimplementedNameNodeServerServer
// for forward compatibility
type NameNodeServerServer interface {
	mustEmbedUnimplementedNameNodeServerServer()
}

// UnimplementedNameNodeServerServer must be embedded to have forward compatible implementations.
type UnimplementedNameNodeServerServer struct {
}

func (UnimplementedNameNodeServerServer) mustEmbedUnimplementedNameNodeServerServer() {}

// UnsafeNameNodeServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NameNodeServerServer will
// result in compilation errors.
type UnsafeNameNodeServerServer interface {
	mustEmbedUnimplementedNameNodeServerServer()
}

func RegisterNameNodeServerServer(s grpc.ServiceRegistrar, srv NameNodeServerServer) {
	s.RegisterService(&NameNodeServer_ServiceDesc, srv)
}

// NameNodeServer_ServiceDesc is the grpc.ServiceDesc for NameNodeServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NameNodeServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "NameNodeServer",
	HandlerType: (*NameNodeServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "proto/namenode/namenode.proto",
}
